[
    {
        "id": "hrnet",
        "title": "HRnet, application pour les RH",
        "cover": "portfolio-hrnet.webp",
        "type": "webp",
        "objective": "Conversion d'une application de jQuery vers React pour réduire la dette technologique.",
        "achievements": [
            "Déploiement d'une application front-end",
            "Utilisation de Redux et Redux Toolkit pour centraliser la gestion d'état",
            "Utilisation de librairie",
            "Analyse et comparaison des performances de l'ancienne et nouvelle application",
            "Création d'un plugin de modale déployé sur npm",
            "Production de documentations techniques",
            "Écriture de test (Vitest) pour assurer la robustesse de l'application"
        ],
        "tools": [
            "React et React Router",
            "Vite (déploiement de l'application, build)",
            "Redux Toolkit et Redux",
            "Testing Library",
            "Vitest (écriture des tests)"
        ],
        "githublink": "https://github.com/haaslaura/project14-hrnet-react",
        "demolink": ""
    },
    {
        "id": "argentbank",
        "title": "Argent Bank, compte utilisateur bancaire",
        "cover": "portfolio-argentbank.webp",
        "type": "webp",
        "objective": "Création d'une application web permettant aux clients de se connecter et de gérer leurs comptes et leur profil.",
        "achievements": [
            "Création de la partie front avec Vite, React et React Router, à partir de user case",
            "Centralisation d'un système de gestion d'état avec Redux Toolkit et Redux",
            "Gestion des données à partir de MongoDB Atlas et MongoDB Compass",
            "Utilisation de Swagger pour spécifier les endpoints d'API nécessaires pour une éventuel développement de l'application."
        ],
        "tools": [
            "React et React Router",
            "Vite (déploiement de l'application, build)",
            "Redux Toolkit et Redux",
            "MongoDB Atlas et MongoDB Compass",
            "Swagger",
            "API Postman"
        ],
        "githublink": "https://github.com/haaslaura/project13-argentbank-front",
        "demolink": ""
    },
    {
        "id": "sportsee",
        "title": "SportSee, tableau de bord d'analytics de sport",
        "cover": "portfolio-sportsee.webp",
        "type": "webp",
        "objective": "Développement d'un tableau de bord d'analytics avec React.",
        "achievements": [
            "Implémentation de la page de profil à partir de la maquette",
            "Utilisation de la librairie Recharts, compréhension de la documentation",
            "Création d'un service pour switcher entre les données mockées et celles de l'API"
        ],
        "tools": [
            "React",
            "Create React App (déploiement de l'application, build)",
            "React Router",
            "Recharts",
            "Sass",
            "Figma"
        ],
        "githublink": "https://github.com/haaslaura/sportsee-front",
        "demolink": ""
    },
    {
        "id": "kasa",
        "title": "Kasa, application de location de logements",
        "cover": "portfolio-kasa.webp",
        "type": "webp",
        "objective": "Réaliser le nouveau site de location d'appartement de Kasa en React côté Front.",
        "achievements": [
            "Création de composants avec React",
            "Respect de la maquette sur Figma",
            "Développement des routes de l'application avec React Router"
        ],
        "tools": [
            "React",
            "Create React App (déploiement de l'application, build)",
            "React Router",
            "Sass",
            "Figma"
        ],
        "githublink": "https://github.com/haaslaura/kasa-dev",
        "demolink": ""
    }
]